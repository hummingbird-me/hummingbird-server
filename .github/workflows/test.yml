name: Kitsu Test Suite

on: [push, pull_request]

env:
  STREAM_API_KEY: q3k9n9kqk3fb
  STREAM_API_SECRET: vkw87x3p323z6ma75n8dvnse98jrr9gkauf2zfjnzbgjpmm54ssnbync4yhhzugc
  CC_TEST_REPORTER_ID: 5e2172ea5a30b07e172058a3b33dfe08c6354699808e8f3010acc32b1ef41395
  BUNDLE_GITHUB__HTTPS: true
  LOG_LEVEL: warn

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10-alpine
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kitsu_test
        ports:
          - 5432/tcp
      redis:
        image: redis:alpine
        ports:
          - 6379/tcp
      elasticsearch:
        image: elasticsearch:2-alpine
        ports:
          - 9200/tcp

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v1

    - name: Restore Cached Dependencies
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-

    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6.x

    - name: Install Dependencies
      run: |
        sudo apt-get -yqq install libpq-dev
        gem install bundler
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Set up Test Environment
      if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/kitsu_test
        REDIS_URL: redis://localhost:${{ job.services.redis.ports[6379] }}/1
        ELASTICSEARCH_URL: localhost:${{ job.services.elasticsearch.ports[9200] }}
      run: |
        bundle exec rake db:create db:schema:load

    - name: Run Tests
      if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/kitsu_test
        REDIS_URL: redis://localhost:${{ job.services.redis.ports[6379] }}/1
        ELASTICSEARCH_URL: localhost:${{ job.services.elasticsearch.ports[9200] }}
      run: |
        bundle exec rspec

    - name: Deploy
      uses: octokit/request-action@v2.x
      if: success() && github.ref == 'refs/heads/the-future'
      with:
        route: POST /repos/:repo/deployments
        repo: ${{ github.repository }}
        ref: ${{ github.sha }}
        environment: staging
        auto_merge: false
        description: "Deploy ${{ github.sha }} to Staging"
        mediaType: '{"previews": ["flash"]}'
        required_contexts: "[]"
      env:
        GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
